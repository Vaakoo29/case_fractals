from turtle import *
from rulocal import FRACTALS, SIZE, N

def kocha(n, size):
    if n == 0:
        forward(n)
    else:
        kocha(n-1, size/3)
        left(60)
        kocha(n-1, size/3)
        right(120)
        kocha(n-1, size/3)
        left(60)
        kocha(n-1, size/3)


def snowflake_kocha(n, size):
    if n == 0:
        kocha(n,size)
        right(120)
        kocha(n, size)
        right(120)
        kocha(n, size)
    else:
        kocha(n, size)
        right(120)
        kocha(n, size)
        right(120)
        kocha(n, size)

def lev(n, size):
    if n == 0:
        forward(size)
    else:
        left(45)
        lev(n-1, size)
        right(90)
        lev(n-1, size)
        left(45)

def mink(n, size):
    if n == 0:
        forward(size)
    else:
        mink(n-1, size/3)
        left(90)
        mink(n-1, size/3)
        right(90)
        mink(n-1, size/3)
        right(90)
        mink(n-1, size/3)
        mink(n-1, size/3)
        left(90)
        mink(n-1, size/3)
        left(90)
        mink(n-1, size/3)
        right(90)
        mink(n-1, size/3)

def ice(n, size):
    if n == 0:
        forward(size)
    else:
        ice(n-1, size/2)
        left(90)
        ice(n-1, size/4)
        right(180)
        ice(n-1, size/4)
        left(90)
        ice(n-1, size/2)


def ice_2(n, size):
    if n == 0:
        forward(size)
    else:
        ice_2(n-1, size/2)
        left(120)
        ice_2(n-1, size/4)
        left(180)
        ice_2(n-1, size/4)
        left(120)
        ice_2(n-1, size/4)
        left(180)
        ice_2(n-1, size/4)
        left(120)
        ice_2(n-1, size/2)

def main():
    f = int(input(FRACTALS))
    size = int(input(SIZE))
    n = int(input(N))
    if f == 1:
        kocha(n, size)
    if f == 2:
        snowflake_kocha(n, size)
    if f == 3:
        ice(n, size)
    if f == 4:
        ice_2(n, size)

    if f == 7:
        mink(n, size)
    if f == 8:
        lev(n, size)
    
main()
